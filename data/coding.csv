Date,Focus,Summary,Challenges/Problems,Next Steps,Members,"Media Links / Additional Notes (i.e. GooglePhotos link, video link, etc.)"
10/3/2020 (morning),"Downloading applications and making GitHub accounts, taking apart last year's robot","We downloaded a lot of software (Android Studio, and other applications to make that work) to help us connect and contribute to the Wildbots GitHub. We looked over the pre-existing drive library to see what we could figure out based on our limited knowledge of the coding language. We also started to take apart RB (rip) so we could use the chassis to start coding the robot.","Some computer problems, when downloading, there were various different errors. Taking the mechs off of last year's robot turned out to be much more complicated than expected, so we still have some work to do on that next week.",Finish unscrewing the robot so that it can be used for learning and practice.,"Liza, Sophia",
10/3/2020 (afternoon),"Downloading Android Studio, making a GitHub account, and looking at a little bit of old code",We downloaded Android Studio. We were able to create GitHub accounts and join the Wildbots GitHub. We also looked over the drive library and the driver-controlled code.,We had some problems with Android Studio because there were some new error messages that we weren't sure how to fix.,Finish correcting error messages and work towards a better understanding of the program,"Bonnie, Kate, Abby, Liza",
10/10/2020 (morning),"Getting an intro to Java tutorial, finishing taking apart the past robot, connecting the Driver control Hub","Today we learned the basics of Java coding (arrays, void, int, etc.) and took apart last year's robot to have access to the chassis. We later set up the new control hub and connected the phone and then took the driving code from one of last year's code, and learned how to push and pull it.","We had some trouble with pushing and pulling out the drive code and remembering to capitalize ""System"" in the code.",Get this code to work on the robot,"Bonnie, Sophia, Liza",
10/10/2020 (afternoon),"Getting the TeleOp mode to work, setting up encoders",Today we used the TeleOp mode that the morning group built and got it to work with the control hub. We also started working on the encoders and trying to correspond to the data that they return to distance.,"To test the encoders, we made an autonomous mode that would log the encoder data, move, then log the encoder data again so that we could find the difference, but for some reason, the logs were not showing up in the new autonomous.","Finish figuring out encoder data, maybe try to figure out why the logs were not showing up.","Abby B, Kate, Liza",
10/17/2020 (morning),"Learning how to set up the robot correctly, running some code autonomously, tried to use the controllers to drive and turn, learned about strafing","We started by pulling a basic auton code from last year's GitHub and fixed some parts of it so we could then try to transfer the code from our computers to the robot. We also tried twice to connect the controllers and phones to the robot, once with instructions, and once on our own. We then took a break and worked with the building team on how the mechs would work specifically and offered some ideas which when compiled, the building team put the final idea on the whiteboard. Kate then taught us (Liza and Sophia) strafing math and how the mecanum wheels work.","Sometimes, the phone froze or we forgot steps in between when setting up the robot, so we had to restart again.","After learning the concept of strafing, we wanted to try to turn while moving on a diagonal. We also wanted to work with some sensors and make moving on a diagonal more precise. We also proposed a code that (during TeleOp) could sense the side of the goal and hit all three power shots in a row!","Liza, Sophia, Kate",
10/17/2020 (afternoon),Measuring encoder values,"We wanted to make it so that we can correlate encoder values to distance. To do this, Haley and Abby measured approximately 50 data points of varying distances to determine the correlation. Fortunately, there definitely appeared to be a correlation between the values and the distance which means that our encoders are working, however, there was a bit of variation in the exact values of the encoders between identical distances. Liza and Kate then used the values we recorded to plot graphs and try to make some preliminary relations between distance and value.",The front right wheel likes to lift off the ground ~floaty~ and the robot slips a little bit after the coded distance is done.,"In upcoming weeks, we need to figure out a method of utilizing these measured encoder values and distances and also figure how the two are actually related, perhaps by making an equation.","Kate, Abby, Liza, Haley",
10/24/2020 (morning),Coding the TeleOp ring shooter,"We wrote code so that when ""B"" was pressed on the second controller, the middle wheel would spin at full speed, and when the button was released, the wheel would stop spinning completely. We also connected a new expansion hub to the chassis we were working on. We also took apart one of last year's motors and built a new Ultra Planetary Motor that we tested our code on. We then pushed it into GitHub. 
","While writing the code, we had trouble with some errors, especially when figuring out where to put the new code and figuring out that we needed to add ""intake=hardwareMap.get(DcMotor.class, ""in take"");"". We also had a little trouble finding instructions for connecting the expansion hub and building the ultra planetary gearbox. ",We want to make it a switch instead of making the driver continuously press the button. We were thinking of creating a boolean variable and then using it to switch the truth/false value to its opposite every time the button is pressed.,"Bonnie, Liza, Sophia",
10/24/2020 (afternoon),LEDs and Arrays/encoder testing,"We tested the LEDs with a sample code and added them (as servos) into the configuration. We also worked on correlating the encoder values into distance through creating an enum and hashtable for the encoder values. 
","One wheel floats, so it didn't stop moving when we tried to control the wheels by their encoder values.
",We will attempt to understand the sample code and fix the code so that all the wheels stop moving.,"Abby, Kate, Liza",
10/31/2020 (morning),Begin coding distance sensors for autonomous,We discussed strategies for autonomous based on how many rings we were given during auton. We then joined with the building team to figure out where the intake and launching mechs were going to be on the robot and how we might pick up the wobble goal. We also took two distance sensors and began coding them and connecting them to the phone. We used code from last year to help us since none of us had much experience working with distance sensors. We had to make a few changes for the code to work. We created a mini setup of the field and added tape before we started testing.,"We did not know which bus and which port to connect the sensor to, so we had to test different ones and then try them several times to find the right ones. We eventually figured out that the configuration for the top sensor was 12C Bus 1 Port 0 and the bottom was 12C Bus 2 Port 0. We also didn't realize at first that the robot would be preloaded with 3 rings which meant that some of our strategies had to be revised. We had to take into consideration the size of the robot while we were planning on how to use the distance sensors, and we had to consult with the Building team and finally decided to put them in the front right corner of the robot.",We will code the distance sensors to see how many rings are present (knowing there is a wide range of error between the two sensors).,"Bonnie, Liza, Sophia, Kate",
11/7/2020 (morning),We finished adding distance sensors to the chassis and coding them to detect how many rings are there at the beginning of the autonomous period. We also brainstormed what to do in the various scenarios.,"We cut steel pieces so we could attach the sensors to the robot in a place that would not interfere with the intake and output mechs. The distance sensors are lock-tightened onto the steel sticks. We then went to turn on the robot and phone but it was dead. So, we made a prototype code for how to sense how many distance sensors there were in the stack. We also realized that the number of rings would matter in that the wobble goal would have to be placed on a different tile according to the number of rings. (0 rings - A, 1 ring - B, 4 rings - C). We then pushed the prototype code onto the GitHub (this is not based on actual numbers pulled from the distance sensors but from estimations). 
We also celebrated because Biden won!!","The phone connected to the robot was out of battery, so we were not able to test our code yet. We hope that it will work. When attaching the distance sensors, we had some trouble planning where and how we should attach them on the robot and the screws were sometimes difficult to deal with. Some of the distance sensor parts broke, but we replaced these. The bottom distance sensor is supposed to detect if there is only one ring at the beginning of the autonomous period, but it is too high up and might miss the ring. We considered to angle it down, but then we were afraid it might detect the ground instead. We will try to attach it lower if possible.",Test the code for the distance sensors. Try to improve accuracy when driving to a specific distance. Think about paths for driving to wobble goal boxes.,"Bonnie, Liza, Sophia",
11/7/2020 (afternoon),"We tested the distance sensor code, figured out how to account for outliers in distance sensor values, and used encoders to determine x and y values of the robot.","We tested if the distance sensor prototype code could in fact test whether there were 0, 1, or 4 rings. (which it could). However, we found that the distance sensor (especially the bottom one) would often alternate between displaying ""50"" and ""800"" as values so we started to write out the code on a whiteboard so we could take the average of the values and have fewer errors.",The distance sensors are not exactly reliable so we're going to have to fix the code for that. So many problems with the encoders not working.,"Make the code that averages the dist values. Also, make the encoder value code work.","Abby, Liza",
11/14/2020 (morning),"We finalized the distance sensor ring detection angles, strategized ways to line up with the goal and power shots, and started figuring out how to use the CV webcam.","We tested different angles of the distance sensors to see at which angles they would correctly sense the stack height. We hot glued the distance sensors after we found the angle we wanted. We brainstormed strategy and listed ways to line up to shoot for the high goal. We decided on trying to use a webcam, so we started finding resources and figuring out how to code the webcams.",OpenCV won't load because of a 64 bit problem. USBC needs to be put in with the line up for speed.,Code the CV webcam to use it for distance sensing (by seeing how many pixels a certain object takes up in the image) and for helping the robot line up with the goal or power shot behind the launch line.,"Bonnie, Kate, Liza, Sophia",
11/14/2020 (afternoon),Encoders and Wobble goal,"We worked on getting the robot to move to a specific point on the field, set up the webcam, and laser cut a wobble goal prototype.",We had trouble laser cutting the wobble goal mech and the encoders are being rude.,"Continue with localization, and build the wobble goal mech.","Abby, Liza",
11/21/2020 (morning),Work on camera vision,"We looked at and used the sample code for camera vision to identify the pictures. The code also gave us the x, y, z coordinates of the camera in the field (we had to keep in mind that we were half field). The example code gave us the rotation of the robot as well. We also coded to find the IMU angle.","We realized that the distance sensors need to be close enough to the pictures for it to recognise it, which means that the robot can't initially see the field marker from the other side of the field. We also had some trouble remembering our Vuforia license username and password.","Use the image targets and angle measurments to determine where the robot is on the field, and make the robot go to the right place for shooting and wobble goal parking.","Bonnie, Sophia, Liza, Kate",
11/21/2020 (afternoon),Camera vision auton and TeleOp,"We split into two groups to start writing programs for the camera vision using what the morning team had written.  The autonomous is trying to line up in front of the goal from a set starting postition. The TeleOp is [yes], we also figured out the placement of the webcam in contrast to the rear left corner of the chassis.","For the auton, we will need to take into account the distance that the cameravision can see the images at. We had trouble figuring out the axis of the field and the angle of the robot.",Encorporate webcam coordinates as constants so that  we can always know the webcam position; get the auton to actually work; continue to work on camera vision and make the programs more robust.,"Abby, Liza, Kate","field, and  webcam map (coordinates) "
"12/5/2020 (morning)

","Work on creating an AutonLibrary, brainstorming with encoders","We wanted to create an AutonLibrary that was similar to the DrivingLibrary we had. First, we brainstormed auton paths and determined what functions we wanted in the library and then began writing code. We were able to add the functions that got the stack height of the rings, identified the navigation image targets, and lined up to the goal. At the end, half of us  began to think about encoders and dead wheel odometry.","One challenge we encountered today was figuring out how we wanted to organize the AutonLibrary. We wanted to make sure that it would be helpful in future years as well, so we decided that there would not be too many variables that were only specific to this year's game. We also had some errors in the code that took us a while to fix, but we were able to address all of them. The omni wheels do not fit onto the axle that the encoder does, so we're going to have to engineeer something to get it to fit on the axle (because the omni wheel is the most reccomended wheel for dead wheel odometry and it would reduce friction). We are also concerned however, that they will slip too much; therefore, we are considering using the green squishy wheels becasue they do fit on the axle (which may however cause too much friction when they are dragging although they wouldnt have too much weight pulling them down).",Continue adding to the AutonLibrary (lining up w/power shots). Test the code that has already been written. Maybe think more about wobble goal stuff?  Make an odometry prototype with green wheels and quickly figure out odometry math .,"Bonnie, Liza, Sophia, Kate","Auton Path, and Simple controller for lining up with goal"
"12/5/2020 (afternoon)

","Automatic lining up with the goal, odometry ","We succesfully put two green squishy wheels on one of the chassis. We continued to write the auton library and testing the code in it along the way, specifically we were working on  lining up with goal using Vuforia and the sample code we got from a while ago (its been edited since). ",We realized that we were missing a lot of Vuforia and initialization components so we added them.,"Finish the auton library, code the dead wheels (encoders), and install the third squishy wheel.","Kate, Liza, Kate",
12/12/2020 (morning),Using green squishy wheels to get more accurate encoder values,"We moved the green squishy wheels on the sides of the chassis, so they are across from each other. We then tested the wheels to see if they moved with the robot. They seemed to move consistently with the robot, so we tried to get the encoders to work. The encoders are now printing values.","The robot cannot strafe as the wheels have too much friction. Also, the encoders are returning values that don't exactly make sense. ","We need different wheels, so there is less friction. We need to figure out why the values that the encoders are returning are strange.","Abby, Kate, Liza",
1/23/2021 (morning),Creating a TeleOp mode and parking on the launch line in autonomous mode,"We planned out what we wanted the TeleOp mode to do and decided to code driving using the joysticks, turning the lauching and intake motors on/off, and using a button to line up with the goal.  We also wrote a skeleton code for parking on the line, which should work but we will also have to test whether it moves in the right direction and figure out what times work for moving the robot to the exac spaces. We also thought about what sensors would work best ot optimize that code, and we were considering color sensors, distance sensors, and a camera to recognize lines. ","For creating the TeleOp mode, we had some trouble when uploading the code because we did not yet have the intake and launching motors connected to the robot we were using. We also had some errors that took a while to work out, such as when creating an instance of the AutonLibrary. The robot is also not moving in the right direction anymore - this could be a wiring or coding problem and we aren't sure.","We want to work on lining up with the goal (because it did not work), install the color sensor or distance sensors, test the parking code and make it work, and optimize autonPark with certain sensors.","Sophia, Bonnie, Liza, Kate",
1/23/2021 (afternoon),Testing time-based parking and working on angle when lining up with goal,We fixed the robot's driving in different angles and also fixed the lining up code. We then tested the times for which  the robot would park on line . We also tried to install the color sensor but alas!!,"The color sensor was too outdated for the code... oops! Also, the configurations were being tough today. The drive motors were also being difficult- we realized we were using the wrong function. The phone also stopped connecting last minute. ",Order an encoder and a color sensor! Then have a great scrimmage!!,"Kate, Liza",
1/30/2021,Scrimmage! and installing sensors,We installed a color sensor and two omni wheels.,We had trouble connecting the wheels because we have the control hub and expansion hub placed in an unfortunate spot.,Next time we will work on odometry and test the color sensor code.,"Kate, Liza, Sophia, Bonnie, Abby",
2/6/2021,Testing color sensors,"Installed a color sensor on second robot, worked on writing code and began to test.","We had to remove the distance sensors from driving library so they wouldn't be required every time we want to run the robot. We also had to attach a color sensor to our second robot, as building was working with the one that already had one attached.",Continue testing the color sensors.,"Liza, Deedee",
2/6/2021,Navigation with Vuforia,We worked on rewriting our Vuforia navigation code to work if we want to launch further back (using the alliance target rather than the goal target).,"Even though we used the same code as before, we were having a lot of trouble with the lining up - we're struggling to determine what the problem is because we feel confident in the ideas of this code having seen it work well before.","Continue testing Vuforia, but also begin to focus on driver practice so that the drivers could line up on their own consistently if necessary.",Kate,
2/13/2021,Wobble goal auton,We worked on using the distance sensor function that we'd already written to drive the wobble goal to the correct square. We changed the distance sensor function to only use one sensor!,It took a lot of repeated testing to get both the time and the distance sensor value ranges correct - it took a lot of repeated measures of distance. We also had to figure out how to place the wobble goal such that it was touching the robot at the start of auton.,Continue testing the time for the pathways to place the wobble goal; try and speed it up; maybe implement color sensors for more consistency (if we have time later on); decide if we want to try and get the second wobble goal.,"Liza, Sophia, Bonnie, Abby, Kate",
2/20/2021 morning,Finalizing auton strategy and completing auton,"We first tested the code from last time to see whether the robot could detect the correct number of rings using the distance sensors and then bring the wobble goal to the correct position and then park on the line. Next, we discussed our auton strategy and decided that rather than moving both wobble goals, we would focus on scoring points with wobble goals. We attempted to speed up the moving of the wobble goal but chose to stick with 0.5 speed. Finally, we worked on the auton, and, using the distance sensors, got the robot to line up for shooting the power shots.","When we tried to speed up the wobble goal movement, the wobble goal would not stay where we brought it too because of the speed at which we did so. Therefore, we tested multiple speeds between 0.5 and 1.0 to find which value would work consisently and quickly. However, we found that 0.5 seemed to be the best solution for us for now. Another challenge we encountered was getting the distance sensors in the correct positions because they would sometimes shift to a different position by accident. ",We want to convert our current auton for the other chassis and make sure that the powershot is hit consistently.,"Sophia, Kate, Liza",
2/20/2021 (afternoon),Attaching encoders w/ omni wheels and looking at odo math,We attached the omni wheels and changed the mechanism so it wouldn't be attached to a square flat. We also worked on changing the encoder code we had wrote previously to reflect our new wheels and encoders. we also callibrated the new wobble goal arms.,"The mechanism was not attaching to the chassis smoothly because it was attached to a flat, so we had to attach it directly. We also had to change the code which might present a problem.",Continue odometry code and hopefully attach a third wheel for strafing odometry.,"Liza, Abby B",
2/20/2021 (afternoon),Testing the new intake/launch,"We added the second intake motor to the code, then worked on using the new intake and launch. We were excited to find that the intake works when we aren't pushed against a wall and that we can launch all three rings! We found that we can get into the mid goal and hit the power shots while touching the back wall at between 50 and 70\% power. We also spent a while thinking about how to start auton touching the back wall and possessing a wobble goal, but also being able to launch.","Given the significant changes in intake/launch capabilities, we realized that the ideal auton strategy would probably change somewhat from what we had been working on. After spending the morning working on lining up close to the launch line for the power shots, we discovered that our new launcher can hit the power shots from the back wall simply by turning from the starting position and it would be much more efficient. This means we'll have to do more testing of motor powers and specific angles to get the lining up right. ","Finalize starting position/angle and launch power/angle, then work on combining auton.","Kate, Karina",
2/27/2021 (morning),Finishing up auton and TeleOp code (not yet tested) and control,"We finalized the TeleOp mode by coding buttons on the gamepad that could control the wobble goal mech. When we tested the code, it worked. We also finalized autonomous. To do this, we first had to calculate the angles we needed to hit the power shots using trigonometry. After we found the angles, we were able to code hitting the powershots so that the robot would change its angle for each power shot.","One challenge we encountered today was figuring out the angles for the power shots. We had to use the resources on the Ulimate Goal Game Manual 2 and some trig to calculate the angles. We did not get a chance to test these angles yet, and they may require some slight changes.","Test the auton code, adjust angles for power shots, finish testing launch power.","Bonnie, Sophia, Liza, Kate",
2/27/2021,Testing auton and motor power,"We focused on getting an auton to work in preparation for the next meeting. We also made a map of the controllers to help communicate the set up of the robot controls. We also did a little bit of work on encoders, but they still do not yet work.",Our motor does not always fire consistently so it was difficult to find the correct power.,"Continue odometry, try to find a way to get the robot to fire consistently.","Kate, Abby B, Karina",
3/6/2021,"First qualifier, had to adapt the auton based on what parts of the robot were working","We had our first qualifier today. However, our robot's strafing was causing us trouble. We made changes to our auton strategy between matches to maximize our point total depending on which aspects of our robot were functional. Toward the end, we successfully delivered a wobble goal because driving was going much more smoothly after the ramp for the rings had been fixed. We also kept a list of problems/potential upgrades for the future, which is posted in the Slack.","We had to quickly change our auton strategy due to issues in our driving. We attempted to use bevelDriveCorrect (from the driving library), but it did not seem to work. We wrote many different autons, including ones with launching into the mid goal and driving up to the low goal and putting rings in there. Ultimately, when the robot's driving functioned correctly, we returned to our previous strategy of bringing one wobble goal to the correct place. ","Address the issues that we wrote down on the board, maybe create an angle adjustment button and test different powers of the launcher for TeleOp (to target power shots and launch into the goal), fix/add to auton.","Sophia, Liza, Kate, Bonnie, Abby B",
3/13/2021,Thought about and planned out what needs to get done before our next qualifier,"We worked together with building and business to arrange the next few meetings and set people to specific tasks. We reflected on our strengths and areas for growth based on our experience during the first qualifier. We brainstormed ideas on how to improve for the next qualifier. Particularly, we plan on focusing our efforts on odometry/encoders (for the launcher and moving around the field) and adding to our auton.",We debated how best to distribute our efforts for the next few weeks. We considered grouping people from different subteams together and working based on task rather than subteam to obtain the best results. ,"Improve on the issues that we identified, following the plan we made.","Sophia, Bonnie, Liza, Deedee",
3/27/2021,Auton with second wobble goal and left and right wobble goal arm positions testing with TeleOp,"We worked on creating an autonomous program to drive not just 1 but 2 wobble goals to the correct target zone. In particular, we ended up focusing on positioning our two servo arms for this task.","We had a lot of trouble uploading code to the robot. The while wasn't worked and when we tried to plug in the USB, the computer wasn't detecting any device. The servos position of the servos also wasn't working.","Because we were unable to run the TeleOp code that we wrote today to test the optimal servo positions for the left and right wobble goal arms, we hope to use it next time so that we can put in those positions for our autonomous code. We also want to adjust the code for the second wobble goal for the case with 0 rings and adapt it for 1 and 4 rings.","Abby B, Kate, Liza, Sophia, Bonnie",
3/27/2021,Improving launcher consistency using velocity control,We figured out using FTC dashboard and wrote code for testing thhe launcher velocity (PID) - the code we wrote will graph the launcher velocity as we shoot rings so we can begin to determine a target velocity.,"We struggled with connecting our controllers to the FTC Dashboard, then discovered that using the controllers on mac seems to require installing additional software - we plan to install this before next meeting so we can do TeleOp testing through the dashboard.",Installing software for using the controllers and testing the code.,"Kate, Liza",
4/3/2021 (morning),New launcher controls using velocity,"We tested running the launcher by setting its velocity and found it was more accurate. We then wrote new TeleOp controls that will launch all 3 rings automatically, but pause between rings to ensure that the launch motors are able to reach their target velocity again.","We were still unable to connect the controllers to the laptop, but we found that we could connect them to the phone while still graphing data. We struggled a little bit with the logic of the new controls system, but after a few tests we were able to get it working.",Determining an ideal launch velocity and tuning to reach it accurately/quickly.,Kate,
4/3/2021 (afternoon),Odometry,We have two different odometry opmodes with different math and we are just trying to get them to drive forwards 12 inches. One of them works!,"For one of the odometry systems, it stops at around 12 inches but it also turns when there is nothing in the code that should make it turn. Our second odometry system is more simplified (only works for driving forwards/backwards), and we made a couple small errors at first (forgetting to set the speed of our driving library and multiplying by ticks / rotation instead of dividing), but we were eventually able to get it accurately driving 12 inches.","Fix one odometry system, start integrating the other into our autonomous when we drive forwards/backwards.","Kate, Liza, Abby",
4/3/2021 (afternoon),Wobble goal auton,"We went over auton and TeleOp mode code together to help Deedee figure out how robotics code worked. Then we tested our two wobble goal auton code. We noticed we had some logic problems with the code, but we test the code anyways. When we tested, the wobble goal arms were no going to the correct position, so we spent the rest of the time trying to figure out how to set the arms to the right place.","The servos were set at an incorrect position so no matter what value we put them at, the arms wouldn't be able to go to the correct place.",Finalize wobble goal arm positions. Test and adapt the two wobble goal auton.,"Sophia, Deedee, Bonnie",
4/10/2021 (morning),"Wobble goal auton, launch auton, intake helper mech in auton","We finalized all three cases of auton so they would deliver both wobble goals to the correct place. We spent the majority of the time testing our code and making edits/changing up the logic of the code. We also started a scrimmageTwo branch onto which we've uploaded the odo code that allows us to move 12 cm. We also wrote code to launch in auton every time the velocity of the launch motors is high enough and then stop after 3 rings had been launched. we decided that we want to integrate emergency buttons for the intake helper if they get stuck (up and down?), because they really dont need to be controlled except for the end of auton where we will move the helper down. ","The left servo was inconsistent in its position and kept getting stuck in between the walls, so we had to take it off.  We had to find a way to count how many times a ring is launched so we reused the code from the launching in TeleOp to count every time the velocity dips.","Incorporate launching into auton and experiment with new encoder code in auton, test launch auton.","Sophia, Deedee, Bonnie, Kate, Liza",
4/10/2021 (afternoon),2 wobble goal auton using odometry,"We first tested the accuracy of the odometry to see if we thought it would work better than time in our autonomous. We found that the two yielded similar results, but decided to switch to odometry for driving forward/backward because it would allow us to make changes more easily and reduce error caused by varying battery levels. From there, we continued working on shifting our 2 wobble goal autonomous for each of the 3 target zones to use odometry.","We found that our odometry typically drives too far, in a way that seems somewhat proportional to the distance its travelling. We have decided for now to continue working with the distance function we have rather than making tweaks/fine-tuning it because the error is consistent and we have limited time before our next qualifier. However, in the future we'd like to adjust for this so our odometry can be not only consistent but more accurate.",Adjusting our autonomous code to ensure both wobble goals reach the box and we park at the end.,"Abby, Liza, Kate",
4/17/2021 (morning),"Editing engineering portfolio, working on control awards document, and testing and creating two velocities for launching ","Today we added to the video script, edited the control awards pdf, and made changes/added to the engineering portfolio. In the portfolio, we also added future teleOp goals.  We also added two different powers for launching, so now during TeleOp, the drivers can switch between 660 ticks/second for the mid goal and power shots, and 1000 ticks/second for the high goal. Liza also helped Annie to create the new outline for judging","One challenge we had was that we were not yet sure what additions or changes would be made in the afternoon session, so we added some comments in the coding section of the portfolio based on what we thought might have to be changed after the afternoon.","For TeleOp, maybe adding a button to adjust the angle automatically before shooting to imporve our consistency and speed.","Kate, Sophia, Deedee, Bonnie",
4/17/2021 (afternoon),"1 wobble goal auton and shooting using odometry, shooting auton","Liza went with Audrey to use the CNC machine. We also worked on making a 1 wobble goal auton and shooting, as we figured this would gain more points than two wobble goals. As a back up, we also created an auton that just shoots. ","There were a lot of issues with the odometry wheels being unplugged! They just kept unplugging themselves, so the values returned were not accurate. We also had to figure out the logic behind whether or not the robot knew it had shot all three rings.",Try to get the auton and shooting consistent.,"Liza, Kate, Abby B",
4/24/2021,Fine-tuning autonomous,"We had two autonomous modes that we focused on for today's qualifier—the first involved just launching 3 rings into the mid goal and parking, and the second involved delivering 1 wobble goal then launching rings and parking. ","Our first main challenge was that our odometry wheels didn't fit within the sizing cube, so we needed an autonomous mode we could run without them. Later in the day, we were able to fit them in the sizing cube, but the new design meant only one of the wheels was giving accurate measurements, so we had to adjust our code to use only one tracking wheel. Our second challenge was that our distance sensor was unexpectedly noisy and we couldn't consistently tell the number of rings, so before our afternoon matches we added a second sensor (one at the height of the first ring, and the other at the height of the fourth ring).","Continuing to improve the consistency of our autonomous that delivers 1 wobble goal, launches 3 rings, and parks. In the future, we'd love to work towards shooting in the high goal or at the power shot targets for even more points.","Sophia, Bonnie, Deedee, Liza, Abby B, Kate",
